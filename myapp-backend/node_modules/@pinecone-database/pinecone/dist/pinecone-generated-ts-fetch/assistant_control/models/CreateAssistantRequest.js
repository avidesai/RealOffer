"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Pinecone Assistant Control Plane API
 * Pinecone Assistant Engine is a context engine to store and retrieve relevant knowledge  from millions of documents at scale. This API supports creating and managing assistants.
 *
 * The version of the OpenAPI document: 2025-04
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateAssistantRequestToJSON = exports.CreateAssistantRequestFromJSONTyped = exports.CreateAssistantRequestFromJSON = exports.instanceOfCreateAssistantRequest = exports.CreateAssistantRequestRegionEnum = void 0;
const runtime_1 = require("../runtime");
/**
 * @export
 */
exports.CreateAssistantRequestRegionEnum = {
    Us: 'us',
    Eu: 'eu'
};
/**
 * Check if a given object implements the CreateAssistantRequest interface.
 */
function instanceOfCreateAssistantRequest(value) {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    return isInstance;
}
exports.instanceOfCreateAssistantRequest = instanceOfCreateAssistantRequest;
function CreateAssistantRequestFromJSON(json) {
    return CreateAssistantRequestFromJSONTyped(json, false);
}
exports.CreateAssistantRequestFromJSON = CreateAssistantRequestFromJSON;
function CreateAssistantRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'name': json['name'],
        'instructions': !(0, runtime_1.exists)(json, 'instructions') ? undefined : json['instructions'],
        'metadata': !(0, runtime_1.exists)(json, 'metadata') ? undefined : json['metadata'],
        'region': !(0, runtime_1.exists)(json, 'region') ? undefined : json['region'],
    };
}
exports.CreateAssistantRequestFromJSONTyped = CreateAssistantRequestFromJSONTyped;
function CreateAssistantRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'instructions': value.instructions,
        'metadata': value.metadata,
        'region': value.region,
    };
}
exports.CreateAssistantRequestToJSON = CreateAssistantRequestToJSON;
//# sourceMappingURL=CreateAssistantRequest.js.map