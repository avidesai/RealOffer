"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Pinecone Assistant Control Plane API
 * Pinecone Assistant Engine is a context engine to store and retrieve relevant knowledge  from millions of documents at scale. This API supports creating and managing assistants.
 *
 * The version of the OpenAPI document: 2025-04
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AssistantToJSON = exports.AssistantFromJSONTyped = exports.AssistantFromJSON = exports.instanceOfAssistant = exports.AssistantStatusEnum = void 0;
const runtime_1 = require("../runtime");
/**
 * @export
 */
exports.AssistantStatusEnum = {
    Initializing: 'Initializing',
    Failed: 'Failed',
    Ready: 'Ready',
    Terminating: 'Terminating',
    InitializationFailed: 'InitializationFailed'
};
/**
 * Check if a given object implements the Assistant interface.
 */
function instanceOfAssistant(value) {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "status" in value;
    return isInstance;
}
exports.instanceOfAssistant = instanceOfAssistant;
function AssistantFromJSON(json) {
    return AssistantFromJSONTyped(json, false);
}
exports.AssistantFromJSON = AssistantFromJSON;
function AssistantFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'name': json['name'],
        'instructions': !(0, runtime_1.exists)(json, 'instructions') ? undefined : json['instructions'],
        'metadata': !(0, runtime_1.exists)(json, 'metadata') ? undefined : json['metadata'],
        'status': json['status'],
        'host': !(0, runtime_1.exists)(json, 'host') ? undefined : json['host'],
        'createdAt': !(0, runtime_1.exists)(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !(0, runtime_1.exists)(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
    };
}
exports.AssistantFromJSONTyped = AssistantFromJSONTyped;
function AssistantToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'instructions': value.instructions,
        'metadata': value.metadata,
        'status': value.status,
        'host': value.host,
        'created_at': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updated_at': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
    };
}
exports.AssistantToJSON = AssistantToJSON;
//# sourceMappingURL=Assistant.js.map