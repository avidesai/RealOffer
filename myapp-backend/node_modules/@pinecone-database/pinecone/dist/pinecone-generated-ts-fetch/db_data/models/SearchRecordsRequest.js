"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Pinecone Data Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: 2025-04
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SearchRecordsRequestToJSON = exports.SearchRecordsRequestFromJSONTyped = exports.SearchRecordsRequestFromJSON = exports.instanceOfSearchRecordsRequest = void 0;
const runtime_1 = require("../runtime");
const SearchRecordsRequestQuery_1 = require("./SearchRecordsRequestQuery");
const SearchRecordsRequestRerank_1 = require("./SearchRecordsRequestRerank");
/**
 * Check if a given object implements the SearchRecordsRequest interface.
 */
function instanceOfSearchRecordsRequest(value) {
    let isInstance = true;
    isInstance = isInstance && "query" in value;
    return isInstance;
}
exports.instanceOfSearchRecordsRequest = instanceOfSearchRecordsRequest;
function SearchRecordsRequestFromJSON(json) {
    return SearchRecordsRequestFromJSONTyped(json, false);
}
exports.SearchRecordsRequestFromJSON = SearchRecordsRequestFromJSON;
function SearchRecordsRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'query': (0, SearchRecordsRequestQuery_1.SearchRecordsRequestQueryFromJSON)(json['query']),
        'fields': !(0, runtime_1.exists)(json, 'fields') ? undefined : json['fields'],
        'rerank': !(0, runtime_1.exists)(json, 'rerank') ? undefined : (0, SearchRecordsRequestRerank_1.SearchRecordsRequestRerankFromJSON)(json['rerank']),
    };
}
exports.SearchRecordsRequestFromJSONTyped = SearchRecordsRequestFromJSONTyped;
function SearchRecordsRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'query': (0, SearchRecordsRequestQuery_1.SearchRecordsRequestQueryToJSON)(value.query),
        'fields': value.fields,
        'rerank': (0, SearchRecordsRequestRerank_1.SearchRecordsRequestRerankToJSON)(value.rerank),
    };
}
exports.SearchRecordsRequestToJSON = SearchRecordsRequestToJSON;
//# sourceMappingURL=SearchRecordsRequest.js.map