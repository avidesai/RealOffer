"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Pinecone Data Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: 2025-04
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SearchRecordsRequestQueryToJSON = exports.SearchRecordsRequestQueryFromJSONTyped = exports.SearchRecordsRequestQueryFromJSON = exports.instanceOfSearchRecordsRequestQuery = void 0;
const runtime_1 = require("../runtime");
const SearchRecordsVector_1 = require("./SearchRecordsVector");
/**
 * Check if a given object implements the SearchRecordsRequestQuery interface.
 */
function instanceOfSearchRecordsRequestQuery(value) {
    let isInstance = true;
    isInstance = isInstance && "topK" in value;
    return isInstance;
}
exports.instanceOfSearchRecordsRequestQuery = instanceOfSearchRecordsRequestQuery;
function SearchRecordsRequestQueryFromJSON(json) {
    return SearchRecordsRequestQueryFromJSONTyped(json, false);
}
exports.SearchRecordsRequestQueryFromJSON = SearchRecordsRequestQueryFromJSON;
function SearchRecordsRequestQueryFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'topK': json['top_k'],
        'filter': !(0, runtime_1.exists)(json, 'filter') ? undefined : json['filter'],
        'inputs': !(0, runtime_1.exists)(json, 'inputs') ? undefined : json['inputs'],
        'vector': !(0, runtime_1.exists)(json, 'vector') ? undefined : (0, SearchRecordsVector_1.SearchRecordsVectorFromJSON)(json['vector']),
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : json['id'],
    };
}
exports.SearchRecordsRequestQueryFromJSONTyped = SearchRecordsRequestQueryFromJSONTyped;
function SearchRecordsRequestQueryToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'top_k': value.topK,
        'filter': value.filter,
        'inputs': value.inputs,
        'vector': (0, SearchRecordsVector_1.SearchRecordsVectorToJSON)(value.vector),
        'id': value.id,
    };
}
exports.SearchRecordsRequestQueryToJSON = SearchRecordsRequestQueryToJSON;
//# sourceMappingURL=SearchRecordsRequestQuery.js.map