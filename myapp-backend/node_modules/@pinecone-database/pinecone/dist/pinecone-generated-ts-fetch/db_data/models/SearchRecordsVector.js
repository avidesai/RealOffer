"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Pinecone Data Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: 2025-04
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SearchRecordsVectorToJSON = exports.SearchRecordsVectorFromJSONTyped = exports.SearchRecordsVectorFromJSON = exports.instanceOfSearchRecordsVector = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the SearchRecordsVector interface.
 */
function instanceOfSearchRecordsVector(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfSearchRecordsVector = instanceOfSearchRecordsVector;
function SearchRecordsVectorFromJSON(json) {
    return SearchRecordsVectorFromJSONTyped(json, false);
}
exports.SearchRecordsVectorFromJSON = SearchRecordsVectorFromJSON;
function SearchRecordsVectorFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'values': !(0, runtime_1.exists)(json, 'values') ? undefined : json['values'],
        'sparseValues': !(0, runtime_1.exists)(json, 'sparse_values') ? undefined : json['sparse_values'],
        'sparseIndices': !(0, runtime_1.exists)(json, 'sparse_indices') ? undefined : json['sparse_indices'],
    };
}
exports.SearchRecordsVectorFromJSONTyped = SearchRecordsVectorFromJSONTyped;
function SearchRecordsVectorToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'values': value.values,
        'sparse_values': value.sparseValues,
        'sparse_indices': value.sparseIndices,
    };
}
exports.SearchRecordsVectorToJSON = SearchRecordsVectorToJSON;
//# sourceMappingURL=SearchRecordsVector.js.map