"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Evaluation API
 * Provides endpoints for evaluating RAG systems using various metrics.
 *
 * The version of the OpenAPI document: 2025-04
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AlignmentResponseToJSON = exports.AlignmentResponseFromJSONTyped = exports.AlignmentResponseFromJSON = exports.instanceOfAlignmentResponse = void 0;
const Metrics_1 = require("./Metrics");
const Reasoning_1 = require("./Reasoning");
const TokenCounts_1 = require("./TokenCounts");
/**
 * Check if a given object implements the AlignmentResponse interface.
 */
function instanceOfAlignmentResponse(value) {
    let isInstance = true;
    isInstance = isInstance && "metrics" in value;
    isInstance = isInstance && "reasoning" in value;
    isInstance = isInstance && "usage" in value;
    return isInstance;
}
exports.instanceOfAlignmentResponse = instanceOfAlignmentResponse;
function AlignmentResponseFromJSON(json) {
    return AlignmentResponseFromJSONTyped(json, false);
}
exports.AlignmentResponseFromJSON = AlignmentResponseFromJSON;
function AlignmentResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'metrics': (0, Metrics_1.MetricsFromJSON)(json['metrics']),
        'reasoning': (0, Reasoning_1.ReasoningFromJSON)(json['reasoning']),
        'usage': (0, TokenCounts_1.TokenCountsFromJSON)(json['usage']),
    };
}
exports.AlignmentResponseFromJSONTyped = AlignmentResponseFromJSONTyped;
function AlignmentResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'metrics': (0, Metrics_1.MetricsToJSON)(value.metrics),
        'reasoning': (0, Reasoning_1.ReasoningToJSON)(value.reasoning),
        'usage': (0, TokenCounts_1.TokenCountsToJSON)(value.usage),
    };
}
exports.AlignmentResponseToJSON = AlignmentResponseToJSON;
//# sourceMappingURL=AlignmentResponse.js.map