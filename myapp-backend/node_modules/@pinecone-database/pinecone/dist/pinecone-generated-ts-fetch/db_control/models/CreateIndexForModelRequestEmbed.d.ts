/**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: 2025-04
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Specify the integrated inference embedding configuration for the index.
 *
 * Once set the model cannot be changed, but you can later update the embedding configuration for an integrated inference index including field map, read parameters, or write parameters.
 *
 * Refer to the [model guide](https://docs.pinecone.io/guides/index-data/create-an-index#embedding-models) for available models and model details.
 * @export
 * @interface CreateIndexForModelRequestEmbed
 */
export interface CreateIndexForModelRequestEmbed {
    /**
     * The name of the embedding model to use for the index.
     * @type {string}
     * @memberof CreateIndexForModelRequestEmbed
     */
    model: string;
    /**
     * The distance metric to be used for similarity search. You can use 'euclidean', 'cosine', or 'dotproduct'. If not specified, the metric will be defaulted according to the model. Cannot be updated once set.
     * @type {string}
     * @memberof CreateIndexForModelRequestEmbed
     */
    metric?: CreateIndexForModelRequestEmbedMetricEnum;
    /**
     * Identifies the name of the text field from your document model that will be embedded.
     * @type {object}
     * @memberof CreateIndexForModelRequestEmbed
     */
    fieldMap: object;
    /**
     * The dimension of embedding vectors produced for the index.
     * @type {number}
     * @memberof CreateIndexForModelRequestEmbed
     */
    dimension?: number;
    /**
     * The read parameters for the embedding model.
     * @type {object}
     * @memberof CreateIndexForModelRequestEmbed
     */
    readParameters?: object;
    /**
     * The write parameters for the embedding model.
     * @type {object}
     * @memberof CreateIndexForModelRequestEmbed
     */
    writeParameters?: object;
}
/**
 * @export
 */
export declare const CreateIndexForModelRequestEmbedMetricEnum: {
    readonly Cosine: "cosine";
    readonly Euclidean: "euclidean";
    readonly Dotproduct: "dotproduct";
};
export type CreateIndexForModelRequestEmbedMetricEnum = typeof CreateIndexForModelRequestEmbedMetricEnum[keyof typeof CreateIndexForModelRequestEmbedMetricEnum];
/**
 * Check if a given object implements the CreateIndexForModelRequestEmbed interface.
 */
export declare function instanceOfCreateIndexForModelRequestEmbed(value: object): boolean;
export declare function CreateIndexForModelRequestEmbedFromJSON(json: any): CreateIndexForModelRequestEmbed;
export declare function CreateIndexForModelRequestEmbedFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateIndexForModelRequestEmbed;
export declare function CreateIndexForModelRequestEmbedToJSON(value?: CreateIndexForModelRequestEmbed | null): any;
