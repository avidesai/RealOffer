"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Pinecone Assistant Data Plane API
 * Pinecone Assistant Engine is a context engine to store and retrieve relevant knowledge from millions of documents at scale. This API supports interactions with assistants.
 *
 * The version of the OpenAPI document: 2025-04
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContextOptionsModelToJSON = exports.ContextOptionsModelFromJSONTyped = exports.ContextOptionsModelFromJSON = exports.instanceOfContextOptionsModel = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the ContextOptionsModel interface.
 */
function instanceOfContextOptionsModel(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfContextOptionsModel = instanceOfContextOptionsModel;
function ContextOptionsModelFromJSON(json) {
    return ContextOptionsModelFromJSONTyped(json, false);
}
exports.ContextOptionsModelFromJSON = ContextOptionsModelFromJSON;
function ContextOptionsModelFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'topK': !(0, runtime_1.exists)(json, 'top_k') ? undefined : json['top_k'],
        'snippetSize': !(0, runtime_1.exists)(json, 'snippet_size') ? undefined : json['snippet_size'],
    };
}
exports.ContextOptionsModelFromJSONTyped = ContextOptionsModelFromJSONTyped;
function ContextOptionsModelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'top_k': value.topK,
        'snippet_size': value.snippetSize,
    };
}
exports.ContextOptionsModelToJSON = ContextOptionsModelToJSON;
//# sourceMappingURL=ContextOptionsModel.js.map