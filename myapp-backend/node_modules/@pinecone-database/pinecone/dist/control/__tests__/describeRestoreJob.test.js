"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const describeRestoreJob_1 = require("../describeRestoreJob");
const errors_1 = require("../../errors");
describe('describeRestoreJob', () => {
    const setupSuccessResponse = (responseData) => {
        const fakeDescribeRestoreJob = jest
            .fn()
            .mockImplementation(() => Promise.resolve(responseData));
        const MIA = {
            describeRestoreJob: fakeDescribeRestoreJob,
        };
        return MIA;
    };
    test('calls the openapi describe restore job endpoint, passing jobId', async () => {
        const MIA = setupSuccessResponse(undefined);
        const returned = await (0, describeRestoreJob_1.describeRestoreJob)(MIA)('restore-job-id');
        expect(returned).toEqual(undefined);
        expect(MIA.describeRestoreJob).toHaveBeenCalledWith({
            jobId: 'restore-job-id',
        });
    });
    test('should throw backupId is not provided', async () => {
        const MIA = setupSuccessResponse('');
        // @ts-ignore
        await expect((0, describeRestoreJob_1.describeRestoreJob)(MIA)()).rejects.toThrow('You must pass a non-empty string for `restoreJobId` in order to describe a restore job');
        await expect((0, describeRestoreJob_1.describeRestoreJob)(MIA)('')).rejects.toThrow(errors_1.PineconeArgumentError);
    });
});
//# sourceMappingURL=describeRestoreJob.test.js.map