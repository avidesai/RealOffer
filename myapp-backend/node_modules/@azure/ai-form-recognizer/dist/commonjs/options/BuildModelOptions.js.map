{"version":3,"file":"BuildModelOptions.js","sourceRoot":"","sources":["../../../src/options/BuildModelOptions.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;;AAqBlC;;GAEG;AACH,2DAA2D;AAC9C,QAAA,sBAAsB,GAAG;IACpC;;;OAGG;IACH,QAAQ,EAAE,UAAU;IACpB;;;OAGG;IACH,MAAM,EAAE,QAAQ;CACR,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { OperationOptions } from \"@azure/core-client\";\nimport type { DocumentModelOperationState } from \"../lro/administration.js\";\nimport type { PollerOptions } from \"./PollerOptions.js\";\n\n/**\n * Supported model build modes. The model build mode selects the engine that the service uses to train the model based\n * on the labeled training data.\n *\n * The options are:\n * - \"neural\", which yields the highest quality of model that is capable of extracting data from classes of documents\n *   that have the same structure of data, but different layouts (for example, W2 tax forms, which may vary from company\n *   to company, but always contain the same information).\n * - \"template\", which requires all documents to have the same fixed layout (template).\n *\n * Please see the following link for more information: https://aka.ms/azsdk/formrecognizer/buildmode\n */\nexport type DocumentModelBuildMode =\n  (typeof DocumentModelBuildMode)[keyof typeof DocumentModelBuildMode];\n\n/**\n * Supported values of `DocumentModelBuildMode`.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const DocumentModelBuildMode = {\n  /**\n   * A mode that builds a model assuming that documents all follow the same, fixed template layout (the same relative\n   * positioning of fields between documents).\n   */\n  Template: \"template\",\n  /**\n   * A mode that uses a neural engine to extract fields, allowing for documents that have different visual appearances,\n   * but that contain the same information.\n   */\n  Neural: \"neural\",\n} as const;\n\n/**\n * Options common to all operations that define new models, such as `beginBuildDocumentModel`,\n * `beginComposeDocumentModel`, and `getCopyAuthorization`.\n */\nexport interface CommonModelCreationOptions {\n  /**\n   * A textual description of the model (can be any text).\n   */\n  description?: string;\n\n  /**\n   * Additional, user-specified key-value pairs to associate with the model as persistent metadata.\n   */\n  tags?: Record<string, string>;\n}\n\n/**\n * Options for the model creation operation.\n */\nexport interface CreateDocumentModelOptions\n  extends OperationOptions,\n    CommonModelCreationOptions,\n    PollerOptions<DocumentModelOperationState> {}\n\n/**\n * Options for the model build operation.\n */\nexport interface BeginBuildDocumentModelOptions extends CreateDocumentModelOptions {}\n\n/**\n * Options for the model compose operation.\n */\nexport interface BeginComposeDocumentModelOptions extends CreateDocumentModelOptions {}\n"]}