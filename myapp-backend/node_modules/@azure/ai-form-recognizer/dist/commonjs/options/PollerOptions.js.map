{"version":3,"file":"PollerOptions.js","sourceRoot":"","sources":["../../../src/options/PollerOptions.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { OperationOptions } from \"@azure/core-client\";\nimport type { PollOperationState } from \"@azure/core-lro\";\n\n/**\n * Options for long-running operations (pollers) in the Form Recognizer clients.\n */\nexport interface PollerOptions<TState extends PollOperationState<unknown>>\n  extends OperationOptions {\n  /**\n   * The amount of time to wait (in milliseconds) between subsequent requests relating to the same operation.\n   */\n  updateIntervalInMs?: number;\n  /**\n   * A serialized poller state. If provided, the polling operation will be resumed from the given state instead of\n   * started as if it were a new operation.\n   */\n  resumeFrom?: string;\n  /**\n   * An optional initial progress handler that will be called when the poller state updates. This handler will be called\n   * once immediately after the poller state is initialized.\n   */\n  onProgress?: (state: TState) => void;\n}\n"]}