import type { DocumentModelDetails } from "./generated/index.js";
import type { AnalyzeResult } from "./lro/analysis.js";
/**
 * A well-known model specification that supports extracting structured documents.
 *
 * See the `beginAnalyzeDocument` method of {@link DocumentAnalysisClient}, which supports consuming these
 * `DocumentModel` objects instead of model ID strings to provide stronger result types.
 */
export interface DocumentModel<Result> {
    /**
     * The unique ID of this model.
     */
    modelId: string;
    /**
     * The API version of the model.
     */
    apiVersion?: string;
    /**
     * An associated transformation that is used to conver the base (weak) Result type to the strong version.
     */
    transformResult: (input: AnalyzeResult) => Result;
}
/**
 * Create a DocumentModel that performs analysis using the given schema.
 *
 * The types of `documents` are created from the schema, so they are `unknown` unless they are asserted to be a
 * different type.
 *
 * @hidden
 * @param schema - model schema contents
 * @returns - a DocumentModel that encodes the schema
 */
export declare function createModelFromSchema(schema: Omit<DocumentModelDetails, "createdOn">): DocumentModel<AnalyzeResult<unknown>>;
//# sourceMappingURL=documentModel.d.ts.map