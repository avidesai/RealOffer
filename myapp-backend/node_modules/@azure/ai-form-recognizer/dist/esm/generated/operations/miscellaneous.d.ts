import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Miscellaneous } from "../operationsInterfaces/index.js";
import { GeneratedClient } from "../generatedClient.js";
import { OperationSummary, MiscellaneousListOperationsOptionalParams, MiscellaneousGetOperationOptionalParams, MiscellaneousGetOperationResponse, MiscellaneousGetResourceInfoOptionalParams, MiscellaneousGetResourceInfoResponse } from "../models/index.js";
/** Class containing Miscellaneous operations. */
export declare class MiscellaneousImpl implements Miscellaneous {
    private readonly client;
    /**
     * Initialize a new instance of the class Miscellaneous class.
     * @param client Reference to the service client
     */
    constructor(client: GeneratedClient);
    /**
     * Lists all operations.
     * @param options The options parameters.
     */
    listOperations(options?: MiscellaneousListOperationsOptionalParams): PagedAsyncIterableIterator<OperationSummary>;
    private listOperationsPagingPage;
    private listOperationsPagingAll;
    /**
     * Lists all operations.
     * @param options The options parameters.
     */
    private _listOperations;
    /**
     * Gets operation info.
     * @param operationId Unique operation ID.
     * @param options The options parameters.
     */
    getOperation(operationId: string, options?: MiscellaneousGetOperationOptionalParams): Promise<MiscellaneousGetOperationResponse>;
    /**
     * Return information about the current resource.
     * @param options The options parameters.
     */
    getResourceInfo(options?: MiscellaneousGetResourceInfoOptionalParams): Promise<MiscellaneousGetResourceInfoResponse>;
    /**
     * ListOperationsNext
     * @param nextLink The nextLink from the previous successful call to the ListOperations method.
     * @param options The options parameters.
     */
    private _listOperationsNext;
}
//# sourceMappingURL=miscellaneous.d.ts.map